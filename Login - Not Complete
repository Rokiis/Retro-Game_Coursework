#include <ncurses.h> 
#include <iostream>
#include <string>
#include <algorithm>
using namespace std;
bool loginregisterloop = false;
    void printMiddle(WINDOW * win, int y, int x, int upDown, string asd) 
{
	int getLength = asd.length();									 
	int newY = (y / 2) - upDown;
	int newX = (x - getLength) / 2;
	mvwprintw(win, newY, newX, asd.c_str());
}
int main()
{
    while (!loginregisterloop)
    {
        initscr();
        cbreak();
        curs_set(0);
        noecho();
        int height, width, start_y, start_x;
        height = 20;
        width = 70;
        start_y = 1;
        start_x = 1;

        WINDOW * loginWin = newwin(height, width, start_y, start_x);
        refresh();

        box (loginWin, 0, 0);
        // mvwprintw(win, 10, 35, "This is A Box");
        wrefresh(loginWin);
        keypad(loginWin, true); // allows the use of arrow keys

        string loginMenu[3] = {"Login", "Register", "Exit"};
        int choice;
        int loginHighlight = 0;

        while (1)
        {
            for (int i = 0; i < 3; i++)
            {
                if(i == loginHighlight)
                    wattron(loginWin, A_REVERSE);
                mvwprintw(loginWin, i+7, 3, loginMenu[i].c_str());
                wattroff(loginWin, A_REVERSE);
            }
            choice = wgetch(loginWin);

            switch(choice)
            {
                case KEY_UP:
                    loginHighlight--;
                    if(loginHighlight == -1)
                        loginHighlight = 2;
                    break;
                case KEY_DOWN:
                    loginHighlight++;
                    if(loginHighlight ==3)
                       loginHighlight = 0;
                    break;
                default:
                    break;
            }

            if(choice == 10)
                break;
            
        }
            string inputRegisterMenu = loginMenu [loginHighlight];
            wrefresh(loginWin);
            if (inputRegisterMenu == "Register")
            {
                bool registerGameLoop = false;
                while (!registerGameLoop)
                {
                    wrefresh(loginWin);
                    WINDOW * registerWin = newwin (20, 70, 1, 1);
                    keypad(registerWin, true);
                    refresh();
                    wborder(registerWin, 0, 0, 0, 0, 0, 0, 0, 0);
                    wattron(registerWin, COLOR_PAIR(1));
                    int registerMaxY, registerMaxX;
                    getmaxyx(registerWin, registerMaxY, registerMaxX);
                    printMiddle(registerWin, registerMaxY, registerMaxX, 9, "Register");
                    wrefresh(registerWin);
                    string registerWinChoices[2] = {"Enter Username", "Go Back"};
                    int registerChoice;
                    int registerHighlight = 0;
                    
                    while (1)
                    {
                        for (int p = 0; p < 2; p++)
                        {
                            if (p == registerHighlight)
                                wattron(registerWin, A_REVERSE);
                            mvwprintw(registerWin, p+7, 3, registerWinChoices[p].c_str());
                            wattroff(registerWin, A_REVERSE);
                            wrefresh(registerWin);
                        }
                        wrefresh(registerWin);
                        registerChoice = wgetch(registerWin);
                        
                        switch(registerChoice)
                        {
                                case KEY_UP:
                                    registerHighlight--;
                                    if(registerHighlight == -1)
                                        registerHighlight = 0;
                                    break;
                                case KEY_DOWN:
                                    registerHighlight++;
                                    if(registerHighlight == 2)
                                        registerHighlight = 1;
                                    break;
                                default:
                                    break;
                        }
                        
                        if (registerChoice = 10)
                            break;
                        wrefresh(registerWin);
                    }
                    
                }
                
                
            }
        
        
    }
    getch();
    
    endwin();
    
    return 0;
}
